{"version":3,"sources":["features/tictactoe/tttSlice.js","features/tictactoe/square.js","features/tictactoe/tttPresenter.js","features/tictactoe/tttContainer.js","App.js","app/store.js","index.js"],"names":["tttSlice","createSlice","name","initialState","history","squares","Array","fill","toggleChecked","selected","stepNumber","xIsNext","winner","reducers","jumpTo","state","action","payload","move","handleHistory","handleToggle","checked","deleteSelected","slice","handleClick","calculateWinner","lines","i","length","a","b","c","reason","actions","connect","ttt","dispatch","props","id","value","rowCol","className","indexOf","onClick","e","temp","target","concat","squareClick","Presenter","current","status","moves","handleChecked","boards","map","row","rowNum","key","col","colNum","makeBoard","type","onChange","toggle","reversedHistory","ele","unshift","step","makeMoves","desc","App","configureStore","reducer","tttReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.89377c17.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const tttSlice = createSlice({\r\n  name: \"ttt\",\r\n  initialState: {\r\n    history: [\r\n      {\r\n        squares: Array(9).fill(null),\r\n      },\r\n    ],\r\n    toggleChecked: false,\r\n    selected: [\"\"],\r\n    stepNumber: 0,\r\n    xIsNext: true,\r\n    winner: null,\r\n  },\r\n  reducers: {\r\n    jumpTo: (state, action) => {\r\n      if (state.stepNumber !== action.payload.move) {\r\n        state.winner = null;\r\n      }\r\n      state.stepNumber = action.payload.move;\r\n      state.xIsNext = action.payload.move % 2 === 0;\r\n    },\r\n    handleHistory: (state, action) => {\r\n      state.history = action.payload.history;\r\n    },\r\n    handleToggle: (state, action) => {\r\n      state.toggleChecked = action.payload.checked;\r\n    },\r\n    deleteSelected: (state, action) => {\r\n      state.selected = state.selected.slice(0, action.payload.move + 1);\r\n    },\r\n    handleClick: (state, action) => {\r\n      state.stepNumber = action.payload.state.stepNumber;\r\n      state.selected = action.payload.state.selected;\r\n      state.history = action.payload.state.history;\r\n      state.xIsNext = action.payload.state.xIsNext;\r\n    },\r\n    calculateWinner: (state, action) => {\r\n      const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n      ];\r\n      for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (\r\n          action.payload.squares[a] &&\r\n          action.payload.squares[a] === action.payload.squares[b] &&\r\n          action.payload.squares[a] === action.payload.squares[c]\r\n        ) {\r\n          state.winner = {\r\n            winner: action.payload.squares[a],\r\n            reason: [a, b, c],\r\n          };\r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  jumpTo,\r\n  handleClick,\r\n  handleHistory,\r\n  calculateWinner,\r\n  deleteSelected,\r\n  handleToggle,\r\n} = tttSlice.actions;\r\n\r\nexport const selecthistory = (state) => state.ttt.value;\r\n\r\nexport default tttSlice.reducer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { calculateWinner, handleClick } from \"./tttSlice\";\r\n\r\nfunction Square(props) {\r\n  const { winner, history, stepNumber, xIsNext, selected } = props;\r\n  const { id, value, calculateWinner, handleClick } = props;\r\n  const rowCol = [\"A1\", \"A2\", \"A3\", \"B1\", \"B2\", \"B3\", \"C1\", \"C2\", \"C3\"];\r\n  function squareClick(e) {\r\n    const temp = history.slice(0, stepNumber + 1);\r\n    const current = temp[temp.length - 1];\r\n    const squares = current.squares.slice();\r\n    calculateWinner({ squares });\r\n    if (winner || squares[e.target.id]) {\r\n      return;\r\n    }\r\n    squares[e.target.id] = xIsNext ? \"X\" : \"O\";\r\n    e.target.className = \"squareSelecting\";\r\n    const state = {\r\n      history: temp.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      selected: selected.concat([rowCol[e.target.id]]),\r\n      stepNumber: history.length,\r\n      xIsNext: !xIsNext,\r\n    };\r\n    handleClick({ state: state });\r\n    calculateWinner({ squares });\r\n  }\r\n  return (\r\n    <button\r\n      className={\r\n        winner === null\r\n          ? history[stepNumber].squares.indexOf(null) < 0\r\n            ? \"squareSelecting\"\r\n            : value === null\r\n            ? \"square\"\r\n            : selected[stepNumber] === rowCol[id]\r\n            ? \"squareSelecting\"\r\n            : \"squareSelected\"\r\n          : winner.reason.indexOf(id) < 0\r\n          ? \"squareSelected\"\r\n          : \"squareSelecting\"\r\n      }\r\n      id={id}\r\n      onClick={(e) => squareClick(e)}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    history: state.ttt.history,\r\n    selected: state.ttt.selected,\r\n    stepNumber: state.ttt.stepNumber,\r\n    xIsNext: state.ttt.xIsNext,\r\n    winner: state.ttt.winner,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    handleClick: ({ state }) => dispatch(handleClick({ state })),\r\n    calculateWinner: ({ squares }) => dispatch(calculateWinner({ squares })),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);\r\n","import React from \"react\";\r\nimport Square from \"./square\";\r\nfunction Presenter(props) {\r\n  const { current, status, moves, handleChecked } = props.state;\r\n  const boardRows = [\"A\", \"B\", \"C\"];\r\n  const boards = boardRows.map((row, rowNum) => makeBoard(row, rowNum));\r\n  function makeBoard(row, rowNum) {\r\n    const boardCols = [0, 1, 2];\r\n    return (\r\n      <div key={row}>\r\n        <div className=\"board-row\">\r\n          {boardCols.map((col, colNum) => renderSquare(rowNum * 3 + colNum))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  function renderSquare(i) {\r\n    return <Square key={i} id={i} value={current.squares[i]} />;\r\n  }\r\n  return (\r\n    <div className=\"game\">\r\n      <div className=\"game-board\">{boards}</div>\r\n      <div className=\"game-info\">\r\n        <div>\r\n          <div>{status}</div>\r\n          <label className=\"switch\">\r\n            <input type=\"checkbox\" onChange={(e) => handleChecked(e)} />\r\n            <span className=\"slider round\"></span>\r\n          </label>\r\n        </div>\r\n        <ol>{moves}</ol>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ========================================\r\n\r\nexport default Presenter;\r\n","import React from \"react\";\r\nimport TTT from \"./tttPresenter\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  jumpTo,\r\n  handleHistory,\r\n  deleteSelected,\r\n  handleToggle,\r\n} from \"./tttSlice\";\r\n\r\nfunction Game(props) {\r\n  const { history, stepNumber, xIsNext, winner, selected, toggle } = props;\r\n  const { handleHistory, jumpTo, deleteSelected, handleToggle } = props;\r\n  const current = history[stepNumber];\r\n  const reversedHistory = [];\r\n  history.map((ele) => reversedHistory.unshift(ele));\r\n  const moves = toggle\r\n    ? reversedHistory.map((step, move) =>\r\n        makeMoves(step, history.length - move - 1)\r\n      )\r\n    : history.map((step, move) => makeMoves(step, move));\r\n\r\n  function makeMoves(step, move) {\r\n    const desc = move ? \"Go to move #\" + move : \"Go to game start\";\r\n    return (\r\n      <li key={move}>\r\n        <button\r\n          onClick={() => {\r\n            jumpTo({ move: move });\r\n            deleteSelected({ move: move });\r\n            handleHistory({ history: history.slice(0, move + 1) });\r\n          }}\r\n        >\r\n          {desc}\r\n        </button>\r\n        <span> {selected[move]} </span>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  let status;\r\n  status = winner\r\n    ? \"Winner: \" + winner.winner\r\n    : history[stepNumber].squares.indexOf(null) < 0\r\n    ? \"Draw!\"\r\n    : \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n  function handleChecked(e) {\r\n    handleToggle({ checked: e.target.checked });\r\n  }\r\n  const state = {\r\n    status: status,\r\n    moves: moves,\r\n    current: current,\r\n    handleChecked: handleChecked,\r\n  };\r\n\r\n  return <TTT state={state} />;\r\n}\r\n\r\n// ========================================\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    history: state.ttt.history,\r\n    toggle: state.ttt.toggleChecked,\r\n    selected: state.ttt.selected,\r\n    stepNumber: state.ttt.stepNumber,\r\n    xIsNext: state.ttt.xIsNext,\r\n    winner: state.ttt.winner,\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    jumpTo: ({ move }) => dispatch(jumpTo({ move })),\r\n    deleteSelected: ({ move }) => dispatch(deleteSelected({ move })),\r\n    handleHistory: ({ history }) => dispatch(handleHistory({ history })),\r\n    handleToggle: ({ checked }) => dispatch(handleToggle({ checked })),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import React from \"react\";\r\nimport TicTacToe from \"./features/tictactoe/tttContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <TicTacToe />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport tttReducer from \"../features/tictactoe/tttSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    ttt: tttReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}